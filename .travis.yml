language: php

services:
    - mysql

cache:
    apt: true
    yarn: true
    directories:
        - $HOME/.composer/cache/files
        - $HOME/.yarn/node_modules
        - node_modules

matrix:
    include:
        # aliased to a recent 5.6.x version
        - php: '5.6'
          env:
            - WP_VERSION=latest
            - WP_MULTISITE=0
        - php: '5.6'
          env:
            - WP_VERSION=latest
            - WP_MULTISITE=1
        # aliased to a recent 7.x version
        - php: '7.0'
          env:
            - SNIFF=1
            - WP_VERSION=latest


before_script:
    # Set up CodeSniffer
    - export PHPCS_DIR=/tmp/phpcs
    - export SNIFFS_DIR=/tmp/sniffs
    # Install CodeSniffer for WordPress Coding Standards checks.
    - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
    # Install WordPress Coding Standards.
    - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
    # Install VIP Coding Standards.
    - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/automattic/VIP-Coding-Standards.git $SNIFFS_DIR/VIP-Coding-Standards; fi
    # Install PHP Compatibility sniffs.
    - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/wimg/PHPCompatibility.git $SNIFFS_DIR/PHPCompatibility; fi
    # Set install path for PHPCS sniffs.
    # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
    - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --config-set installed_paths $SNIFFS_DIR,$SNIFFS_DIR/VIP-Coding-Standards; fi
    # After CodeSniffer install you should refresh your path.
    - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi
    # Set up unit tests
    - bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
    # Install npm modules
    - yarn

script:
    # Search for PHP syntax errors.
    - find -L . -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
    # WordPress Coding Standards.
    # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
    # @link http://pear.php.net/package/PHP_CodeSniffer/
    # -p flag: Show progress of the run.
    # -s flag: Show sniff codes in all reports.
    # -v flag: Print verbose output.
    # -n flag: Do not print warnings. (shortcut for --warning-severity=0)
    # --standard: Use WordPress as the standard.
    # --extensions: Only sniff PHP files.
    - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs -p -s -v -n . --standard="WordPress-VIP-Go" --ignore=assets/*,vendor/*,bin/*,node_modules/*; fi
    # Run unit tests
    - phpunit
    # Run linting
    - npm run lint-scripts
    - npm run lint-styles
