name: Run PHPUnit and PHPCS

on: [push]

jobs:
  test:
    name: WP ${{ matrix.wordpress }} on PHP ${{ matrix.php }}
    # Ubuntu-20.x includes MySQL 8.0, which causes `caching_sha2_password` issues with PHP < 7.4
    # https://www.php.net/manual/en/mysqli.requirements.php
    # TODO: change to ubuntu-latest when we no longer support PHP < 7.4
    runs-on: ubuntu-18.04
    continue-on-error: ${{ matrix.allowed_failure }}

    env:
      WP_VERSION: ${{ matrix.wordpress }}

    strategy:
      fail-fast: false
      matrix:
        php: ["5.6", "7.0", "7.1", "7.2", "7.3", "7.4", "8.0"]
        wordpress: ["5.5", "5.6", "5.7"]
        allowed_failure: [false]
        # https://make.wordpress.org/core/2020/11/23/wordpress-and-php-8-0/
        exclude:
          - php: "8.0"
            wordpress: "5.5"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          # https://make.wordpress.org/hosting/handbook/handbook/server-environment/#php-extensions
          extensions: curl, dom, exif, fileinfo, hash, json, mbstring, mysqli, openssl, pcre, imagick, xml, zip

      - name: Install Composer dependencies (PHP < 8.0 )
        if: ${{ matrix.php < 8.0 }}
        uses: ramsey/composer-install@v1

      - name: Install Composer dependencies (PHP >= 8.0)
        if: ${{ matrix.php >= 8.0 }}
        uses: ramsey/composer-install@v1
        with:
          composer-options: --ignore-platform-reqs

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Show PHP and PHPUnit version info
        run: |
          php --version
          ./vendor/bin/phpunit --version

      - name: Start MySQL service
        run: sudo /etc/init.d/mysql start

      - name: Install WordPress environment
        run: composer prepare ${{ matrix.wordpress }}

      - name: Run integration tests (single site)
        run: composer integration

      - name: Run integration tests (multisite)
        run: composer integration-ms

      - name: Run PHPCS
        run: composer cs
